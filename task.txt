Разработать программу на C++, реализующую систему управления библиотекой.
Библиотека содержит книги, каждая из которых характеризуется названием, автором, годом издания и количеством экземпляров. 
Программа должна позволять пользователю выполнять следующие действия:
- Добавление новой книги в библиотеку.
- Удаление книги из библиотеки.
- Изменение информации о книге (название, автор, год издания).
- Поиск книги по названию или автору.
- Вывод списка всех книг, отсортированных по году издания.
- Подсчет общего количества книг в библиотеке.
Для реализации программы использовать структуры и указатели. Структура должна содержать поля для хранения информации о книге. 
В программе необходимо реализовать динамическое выделение памяти для хранения списка книг.

так же от себя. Реализовать тут все надо через функции !
для этой задачи нам понадобится изучить динамический массив
---------------------------------------------------------------------------------------------------------------------------------------------
Создайте программу на C++, которая реализует систему учёта книг в библиотеке. 
Программа должна включать следующие функции:
Структура Book для представления одной книги, содержащая следующие поля:
- Название (title)
- Автор (author)
- Год издания (year)
- Жанр (genre)
- Вектор books для хранения списка книг.
- Функция addBook(), принимающая в качестве параметров объект типа Book и добавляющая его в конец вектора books.
- Функция searchBook(), принимающая в качестве параметра строку с названием книги и возвращающая указатель на объект Book, 
  если книга с таким названием найдена в векторе books, иначе возвращает NULL.
- Функция printBooks(), печатающая информацию обо всех книгах из вектора books.
- Функция main(), создающая вектор books, заполняющая его книгами с помощью функции addBook(), 
  выполняющая поиск книги по названию с помощью функции searchBook() и выводящая информацию о книге на экран с помощью функции printBooks().
-----------------------------------------------------------------------------------------------------------------------------------------------
Вам нужно разработать программу на C++, которая будет взаимодействовать с базой данных SQL. Программа должна выполнять следующие задачи:
- Создавать базу данных с таблицей, содержащей информацию о книгах (название, автор, год издания, жанр).
- Добавлять, удалять, обновлять и искать книги в базе данных.
- Отображать информацию о книгах в удобном для пользователя виде.
- Для выполнения этих задач вам потребуется использовать функции, указатели, векторы, структуры и SQL. 
Вы можете выбрать любую СУБД, поддерживающую SQL, например MySQL, PostgreSQL или SQLite.
Вот примерный план того, как вы можете реализовать это задание:
- Изучите основы SQL и выберите подходящую СУБД.
- Создайте структуру данных для представления книги.
- Напишите функции для добавления, удаления, обновления и поиска книг.
- Реализуйте взаимодействие с базой данных с помощью SQL-запросов.
- Протестируйте программу, добавив несколько книг и выполнив различные операции над ними.
Это лишь общий план, и вы можете адаптировать его под свои конкретные требования. 
Например, вы можете добавить дополнительные функции, такие как сортировка книг по алфавиту или по году издания.
-----------------------------------------------------------------------------------------------------------------------------------------------
Привет!  Вот подробное техническое задание для написания программы на C++, которая будет вести учет книг в библиотеке, 
используя структуры, указатели, вектора, функции и базу данных SQLite3:

Название Программы:
Учет книг в библиотеке

Требования к программе:
Язык программирования: C++
-Использование структур для хранения информации о книгах (например, название, автор, год издания, жанр и т.д.).
-Использование указателей для работы с динамической памятью (например, выделение памяти для структур книг).
-Использование векторов для хранения коллекции книг.
-Реализация функций для работы с книгами, такие как добавление новой книги, удаление книги, поиск книги по различным критериям и т.д.
-Интеграция базы данных SQLite3 для хранения информации о книгах.
-Взаимодействие с базой данных SQLite3 для сохранения и загрузки данных о книгах.
Дополнительные функции программы:
-Возможность просмотра списка всех книг в библиотеке.
-Функция поиска книги по названию, автору или жанру.
-Возможность редактирования информации о книге.
-Автоматическое создание базы данных SQLite3 при первом запуске программы, если база данных отсутствует.
-Обработка исключений при работе с базой данных.
Разработка программы:
-Создание структуры для хранения информации о книге.
-Написание функций для работы с книгами (добавление, удаление, поиск, редактирование).
-Настройка подключения к базе данных SQLite3.
-Реализация функций для сохранения и загрузки данных о книгах из базы данных.
-Тестирование программы на различных сценариях использования.
Дополнительные рекомендации:
-Код должен быть хорошо комментирован.
-При возникновении проблем с базой данных, выводить соответствующие сообщения об ошибке.
-Использовать исключения для обработки ошибок.
-При создании программы учесть архитектурные принципы для удобного масштабирования и поддержки.
План работ:
-Создать структуру книги.
-Написать функции для работы с книгами.
-Подключить и настроить базу данных SQLite3.
-Реализовать функции сохранения и загрузки данных в базу данных.
-Провести тестирование программы и исправить обнаруженные ошибки.
После выполнения всех пунктов ты получишь функциональную программу для учета книг в библиотеке на C++ с использованием структур, 
указателей, векторов, функций и базы данных SQLite3! Удачи в разработке! 